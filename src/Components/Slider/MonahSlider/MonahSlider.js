import React, { useState } from 'react';
import Slider from 'react-slick';
import Modal from 'react-modal';
import monah from '../../../img/Slider/sliderSvg/nun_j6xll1ba57t8.svg';
import boo from '../../../img/Slider/sliderSvg/boo_bbixqf37nv44.svg';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import s from './MonahSlider.module.css';
import img1 from '../../../img/Slider/monahPhoto/monah1.png';
import img2 from '../../../img/Slider/monahPhoto/monah2.png';
import img3 from '../../../img/Slider/monahPhoto/monah3.png';
import img4 from '../../../img/Slider/monahPhoto/monah4.png';
import img5 from '../../../img/Slider/monahPhoto/IMG_0353.png';

const images = [img1, img2, img3, img4, img5];
const comments = [
  {
    name: '–í—ñ–∫—Ç–æ—Ä—ñ—è –ë—É–¥–∑—è–Ω',
    date: '05.10.2023',
    comment: '–í—Å–µ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å, –∞–∫—Ç–æ—Ä –º–æ–ª–æ–¥–µ—Ü—åüëç',
    grade: "4.4",
  },
  {
    name: '–í–ª–∞–¥–∏—Å–ª–∞–≤',
    date: '20.11.2022',
    comment: '–≠—Ç–æ—Ç –∫–≤–µ—Å—Ç –æ—á–µ–Ω—å –≤–ø–µ—á–∞—Ç–ª–∏–ª –≥–ª–∞–≤–Ω–æ–π –≥–µ—Ä–æ–∏–Ω–µ–π —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏. –î–æ –º—É—Ä–∞—à–µ–∫ –∏ –∏—Å—Ç–µ—Ä–∏–∫–∏! –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å',
    grade: "4.8",
  },
  {
    name: '–û–ª—å–≥–∞ –ë–∏–ª–∞—á',
    date: '13.04.2022',
    comment: '–°–ø–∞—Å–∏–±–æ, –±—ã–ª–æ —Å—Ç—Ä–∞—à–Ω–æ –∫—Ä—É—Ç–æ –∏ –¥—Ä–∞–π–≤–æ–≤–æüî•üî•üî•–º–æ—Ä–µ —ç–º–æ—Ü–∏–π –∏ –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω–∞.',
    grade: "4.9",
  },
  {
    name: '–ò–Ω–Ω–∞ –ú–µ–¥–∏–Ω–∞',
    date: '15.05.2022',
    comment:'–ö–ª–∞—Å—Å–Ω—ã–π –∫–≤–µ—Å—Ç , –≤ –û–¥–µ—Å—Å–µ –ø—Ä–æ–µ–∑–¥–æ–º, –ø–æ—Å–µ—Ç–∏–ª–∞, –æ—Å—Ç–∞–ª–∞—Å—å –¥–æ–≤–æ–ª—å–Ω–∞. –í—Å–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É—é',
    grade: "4.9",
  },
  {
    name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –ú–æ—Å–∫–æ–≤–∏—á',
    date: '04.01.2023',
    comment:
      '–ë—ã–ª–æ –æ—á–µ–Ω—å —Å—Ç—Ä–∞—à–Ω–æ –∏ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–¥–µ–º –µ—â–µ',
    grade: "4.8",
  },
  {
    name: '–ò–≥–æ—Ä—å',
    date: '28.02.2021',
    comment:
      "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è! –ñ–¥–µ–º –Ω–æ–≤—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!",
    grade: "5",
  },
];

Modal.setAppElement('#root');

export default function MonahSimpleSlider() {
  const [modalType, setModalType] = useState(null); // State to track which modal to open
  const [currentSlide, setCurrentSlide] = useState(0);

  const openModal = (type, index = 0) => {
    setCurrentSlide(index);
    setModalType(type);
    document.body.classList.add('no-scroll'); // Prevent scrolling when modal is open
  };

  const closeModal = () => {
    setModalType(null);
    document.body.classList.remove('no-scroll'); // Re-enable scrolling when modal is closed
  };

  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    initialSlide: currentSlide,
    afterChange: current => setCurrentSlide(current),
  };

  return (
    <div>
      <div className={s.sliderSection}>
        <img src={monah} alt="" className={s.advantagesImg} />
        <div>
          <h2 className={s.sliderTitle}>–ù–∞—à–∞ —Ä–æ–±–æ—Ç–∞ ‚Äî –¥–∞—Ä—É–≤–∞—Ç–∏ –≤–∞–º –µ–º–æ—Ü—ñ—ó.</h2>{' '}
          <br />
          <div className={s.buttonContainer}>
            <button className={s.button} onClick={() => openModal('photos')}>
              –§–æ—Ç–æ
            </button>
            <button className={s.button} onClick={() => openModal('comments')}>
              –íi–¥–≥—É–∫–∏
            </button>
            <button className={s.button} onClick={() => openModal('other')}>
              i–Ω—à–µ
            </button>
          </div>
        </div>
        <img src={boo} alt="" className={s.advantagesImg} />
      </div>

      <Modal
        isOpen={modalType === 'photos'}
        onRequestClose={closeModal}
        contentLabel="Image Modal"
        className={s.modal}
        overlayClassName={s.overlay}
      >
        <Slider className={s.slider} {...settings}>
          {images.map((img, index) => (
            <div key={index}>
              <img
                src={img}
                alt={`Slide ${index}`}
                style={{ width: '100%', height: 'auto' }}
              />
            </div>
          ))}
        </Slider>
      </Modal>

      <Modal
        isOpen={modalType === 'comments'}
        onRequestClose={closeModal}
        contentLabel="Comments Modal"
        className={s.modal}
        overlayClassName={s.overlay}
      >
        <Slider className={s.slider} {...settings}>
          {comments.map((comment, index) => (
            <div key={index}>
              <div className={s.commentSlide}>
                <div className={s.commentInfo}>
                  <h4 className={s.commentName}>{comment.name}</h4>
                  <p className={s.commentDate}>{comment.date}</p>
                </div>
                <div className={s.commentBox}>
                  <p className={s.commentText}>{comment.comment}</p>
                </div>
                <div className={s.commentFooter}>
                  <p className={s.commentConfirm}>–üi–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –≥—Ä–æ—é</p>
                  <p className={s.commentTop}>
                    –íi–¥–ºi—Ç–∫–∞:
                    <span className={s.commentSpan}>{comment.grade}</span>
                  </p>
                </div>
              </div>
            </div>
          ))}
        </Slider>
      </Modal>

      <Modal
        isOpen={modalType === 'other'}
        onRequestClose={closeModal}
        contentLabel="Other Modal"
        className={s.modal}
        overlayClassName={s.overlay}
      >
        <div className={s.otherContent}>
          <h2>–î—Ä—É–≥–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ</h2>
          <p>–ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.</p>
        </div>
      </Modal>
    </div>
  );
}